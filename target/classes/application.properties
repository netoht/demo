# http://docs.spring.io/autorepo/docs/spring-boot/1.2.3.RELEASE/reference/html/common-application-properties.html

#-------------------------------------------------------- health
# desabilita todos os endpoints do actuator
#endpoints.enabled=false

# habilita somente o info, quando o desabilita todos esta ativo
#endpoints.info.enabled=true

# permitir acesso sem esta autenticado
endpoints.health.sensitive=false

#-------------------------------------------------------- info
info.app.name=MyService
info.app.description=My awesome service
info.app.version=1.0.0

project.artifactId=myproject
project.name=Demo
project.version=X.X.X.X
project.description=Demo project for info endpoint
info.build.artifact=demo
info.build.name=demo-actuator
info.build.description=Demo project for Spring Boot
info.build.version=0.0.1-SNAPSHOT

#-------------------------------------------------------- logging
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-logging.html
# por padrao a aplicacao loga em console e utilizar o commons logging
# caso queira que log em arquivo basta colocar o diretorio ou arquivo nas propriedades abaixo
# os arquivos de log sao rotacionados quando atingem o tamanho de 10mb e ERROR, WARN e INFO sao logadas por padrao
#logging.file=/export/logs/demo/demo.log
logging.path=/export/logs/demo

# para setar os level que serao logados e os pacotes,
# utilize o padrao abaixo:
# o prefixo: logging.level + .org.springframework.web (pacote)=LEVEL
# onde LEVEL pode assumir os valores: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
# logging.level.org.hibernate=TRACE

#PID=PID

#-------------------------------------------------------- jmustache
# Cannot find template location: classpath:/templates/
# (please add some templates, check your Mustache configuration,
# or set spring.mustache.template.check-template-location=false)
spring.mustache.check-template-location=false

#--------------------------------------------------------- random values
my.secret.random=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}

#---------------------------------------------------------- security
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-security.html
security.user.password=user

#---------------------------------------------------------- server
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-developing-web-applications.html#boot-features-spring-mvc
server.port=8080

#----------------------------------------------------------- database
# http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-sql.html
#spring.datasource.url=jdbc:mysql://localhost/test
#spring.datasource.username=dbuser
#spring.datasource.password=dbpass
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:h2:/export/logs/demo/testedb;AUTO_SERVER=true
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver


#---------------------------------------------------------- exemplo para properties
connection.remoteAddress=192.168.0.1
